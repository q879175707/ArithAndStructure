在多数情况下，快速排序都是最快的，执行时间为O(N*logN)

快速排序
	快速排序算法本质上通过把一个数组划分为两个子数组，然后递归地调用自身为每一个子数组进行快速排序来实现的。
	算法必须要选择枢纽pivot以及对小的划分区域进行排序。
三个基本步骤：
	把数组或者子数组划分成左边的一组和右边的一组。
	调用自身对左边的一组进行排序。
	调用自身对右边的一组进行排序。
选择枢纽
	应该选择具体的一个数据项的关键字的值作为枢纽。
	可以选择任意一个数据项作为枢纽。为了简便，假设总是选择待划分的子数组最右端的数据项为枢纽
	划分完成后，如果枢纽被插入到了左右子数组之间的分界处，那么枢纽就落在排序之后的最终位置了。
	
sort1固定选择最右端为Pivot

三数据项取中划分
	找到数组中第一个、最后一个以及中间位置数据项的剧终数据项值，并且设置此数据项为枢纽。选择
第一个、最后一个以及中间位置数据项的中值被称为“三数据项取中方法”median-of-three
在选择的过程中使用三数据项取中的方法不仅选择了枢纽，而且还对三个数据项进行了排序。这就保证了数组
左端的数据项小于或者登录枢纽，最右端的数据项大于或者等于枢纽。这就意味着即使取消leftPtr>right
和rightPtr<left的检测，leftPtr和rightPtr也不会分别越过数组的右端或者左端。left和right
的值充当了监控条件，确保不会使指针越界。

sort2使用三数据项取中的算法